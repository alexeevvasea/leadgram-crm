{"ast":null,"code":"import api from './api';\nexport const clientService = {\n  // Получить список клиентов\n  getClients: async (params = {}) => {\n    const response = await api.get('/clients', {\n      params\n    });\n    return response.data;\n  },\n  // Получить клиента по ID\n  getClient: async clientId => {\n    const response = await api.get(`/clients/${clientId}`);\n    return response.data;\n  },\n  // Создать нового клиента\n  createClient: async clientData => {\n    const response = await api.post('/clients', clientData);\n    return response.data;\n  },\n  // Обновить клиента\n  updateClient: async (clientId, updateData) => {\n    const response = await api.put(`/clients/${clientId}`, updateData);\n    return response.data;\n  },\n  // Получить последние чаты\n  getRecentChats: async (limit = 10) => {\n    const response = await api.get('/clients/recent', {\n      params: {\n        limit\n      }\n    });\n    return response.data;\n  },\n  // Получить статистику дашборда\n  getDashboardStats: async () => {\n    const response = await api.get('/clients/dashboard');\n    return response.data;\n  },\n  // Позвонить клиенту\n  callClient: async clientId => {\n    const response = await api.post(`/clients/${clientId}/call`);\n    return response.data;\n  },\n  // Закрыть клиента\n  closeClient: async clientId => {\n    const response = await api.post(`/clients/${clientId}/close`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","clientService","getClients","params","response","get","data","getClient","clientId","createClient","clientData","post","updateClient","updateData","put","getRecentChats","limit","getDashboardStats","callClient","closeClient"],"sources":["/app/frontend/src/services/clientService.js"],"sourcesContent":["import api from './api';\n\nexport const clientService = {\n  // Получить список клиентов\n  getClients: async (params = {}) => {\n    const response = await api.get('/clients', { params });\n    return response.data;\n  },\n\n  // Получить клиента по ID\n  getClient: async (clientId) => {\n    const response = await api.get(`/clients/${clientId}`);\n    return response.data;\n  },\n\n  // Создать нового клиента\n  createClient: async (clientData) => {\n    const response = await api.post('/clients', clientData);\n    return response.data;\n  },\n\n  // Обновить клиента\n  updateClient: async (clientId, updateData) => {\n    const response = await api.put(`/clients/${clientId}`, updateData);\n    return response.data;\n  },\n\n  // Получить последние чаты\n  getRecentChats: async (limit = 10) => {\n    const response = await api.get('/clients/recent', { params: { limit } });\n    return response.data;\n  },\n\n  // Получить статистику дашборда\n  getDashboardStats: async () => {\n    const response = await api.get('/clients/dashboard');\n    return response.data;\n  },\n\n  // Позвонить клиенту\n  callClient: async (clientId) => {\n    const response = await api.post(`/clients/${clientId}/call`);\n    return response.data;\n  },\n\n  // Закрыть клиента\n  closeClient: async (clientId) => {\n    const response = await api.post(`/clients/${clientId}/close`);\n    return response.data;\n  },\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,aAAa,GAAG;EAC3B;EACAC,UAAU,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IACjC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,UAAU,EAAE;MAAEF;IAAO,CAAC,CAAC;IACtD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,SAAS,EAAE,MAAOC,QAAQ,IAAK;IAC7B,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,YAAYG,QAAQ,EAAE,CAAC;IACtD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,YAAY,EAAE,MAAOC,UAAU,IAAK;IAClC,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,UAAU,EAAED,UAAU,CAAC;IACvD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,YAAY,EAAE,MAAAA,CAAOJ,QAAQ,EAAEK,UAAU,KAAK;IAC5C,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,GAAG,CAAC,YAAYN,QAAQ,EAAE,EAAEK,UAAU,CAAC;IAClE,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAS,cAAc,EAAE,MAAAA,CAAOC,KAAK,GAAG,EAAE,KAAK;IACpC,MAAMZ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,iBAAiB,EAAE;MAAEF,MAAM,EAAE;QAAEa;MAAM;IAAE,CAAC,CAAC;IACxE,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAW,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,MAAMb,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,oBAAoB,CAAC;IACpD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAY,UAAU,EAAE,MAAOV,QAAQ,IAAK;IAC9B,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,YAAYH,QAAQ,OAAO,CAAC;IAC5D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAa,WAAW,EAAE,MAAOX,QAAQ,IAAK;IAC/B,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,YAAYH,QAAQ,QAAQ,CAAC;IAC7D,OAAOJ,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}